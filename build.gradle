plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// spring boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// dotenv
	implementation("me.paulschwarz:spring-dotenv:3.0.0")

	// OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// AWS S3
	implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.1.0'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// QueryDSL 메타 데이터 설치 경로
sourceSets {
	main.java.srcDirs += 'build/generated'
}
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file('build/generated')
}
clean {
	delete file('build/generated')
}
