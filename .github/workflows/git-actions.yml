name: CI/CD Docker SpringBoot

on:

  workflow_dispatch:

  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate application.yml
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.yml
          printf '%s' "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
        shell: bash

      - name: Build with gradle
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image & Push
        run: |          
          docker buildx build \
            --platform linux/amd64 \
            --push \
            -t ${{ secrets.DOCKER_USERNAME }}/ssulost-server .

      - name: Generate directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ${{ secrets.EC2_SERVER_USER }}
          key: ${{ secrets.EC2_SERVER_KEY }}
          script: |
            mkdir -p /home/ubuntu/ssulost-server

      - name: Upload to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SERVER_KEY }}
          source: "./docker-compose.yml,./proxy,./deploy.sh"
          target: "/home/ubuntu/ssulost-server"
          rm: true       # <-- 기존 폴더/파일 삭제 후 업로드

      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ${{ secrets.EC2_SERVER_USER }}
          key: ${{ secrets.EC2_SERVER_KEY }}
          script: |
            cd /home/ubuntu/ssulost-server
            
            export DOCKER_USERNAME=${{secrets.DOCKER_USERNAME}}
            
            export DOCKER_PASSWORD=${{secrets.DOCKER_PASSWORD}}
            
            chmod +x deploy.sh
            ./deploy.sh 
