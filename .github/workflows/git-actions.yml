name: CI/CD Docker SpringBoot

on:

  workflow_dispatch:

  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate application.yml
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.yml
          printf '%s' "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
        shell: bash

      - name: Build with gradle
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}


      - name: Build Docker Image
        run: |
          docker rmi ${{ secrets.DOCKER_USERNAME }}/ssulost-server || true
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ssulost-server .

      - name: Publish Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ssulost-server

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ${{ secrets.EC2_SERVER_USER }}
          key: ${{ secrets.EC2_SERVER_KEY }}
          script: |
            cd /home/${{ secrets.EC2_SERVER_USER }}/ssu-lost

            docker-compose pull

            docker-compose stop app1 || true
            docker-compose rm -f app1 || true
            docker-compose up -d app1

            echo "✅ app1 업데이트 완료"
            sleep 10
            curl -f http://localhost:8081/ || (echo "❌ app1 헬스체크 실패" && exit 1)

            docker-compose stop app2 || true
            docker-compose rm -f app2 || true
            docker-compose up -d app2

            echo "✅ app2 업데이트 완료"
            sleep 10
            curl -f http://localhost:8082/ || (echo "❌ app2 헬스체크 실패" && exit 1)

            sudo systemctl reload nginx

